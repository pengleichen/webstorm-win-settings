<templateSet group="React">
  <template name="rrender" value="ReactDOM.render(&#10;  $component$&#10;  , document.querySelector('#$container$')&#10;)" description="渲染组件" toReformat="false" toShortenFQNames="true">
    <variable name="component" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="container" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcjc" value="class $TM_FILENAME_BASE$ extends React.Component {&#10;   render() {&#10;         return (&#10;     &lt;div&gt;&#10;                         $END$&#10;                      &lt;/div&gt;&#10;               );&#10; }&#10;}&#10;" description="Creates a React component class with ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="bnd" value="this.$1$ = this.$1$.bind(this)$END$" description="Binds the this of a method. To be used inside a constructor" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="con" value="constructor(props) {&#10; super(props)&#10;      $END$&#10;}&#10;" description="Adds a default constructor for the class that contains props as arguments" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="conc" value="constructor(props, context) {&#10;       super(props, context)&#10;     $END$&#10;}&#10;" description="Adds a default constructor for the class that contains props and context as arguments" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="ren" value="render() {&#10;   return (&#10;           &lt;div&gt;&#10;                        $END$&#10;        &lt;/div&gt;&#10;        )&#10;}" description="When called, it should examine this.props and this.state and return a single child element." toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="rdp" value="$1$.defaultProps = {&#10; $2$&#10;}" description="Creates empty defaultProps declaration" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="est" value="this.state = {&#10;       $1$&#10;}" description="Creates empty state object. To be used in a constructor." toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rpt" value="$1$.propTypes = {&#10;    $2$&#10;}" description="Creates empty propTypes declaration" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rcc" value="import React, { Component } from 'react'&#10;&#10;class $TM_FILENAME_BASE$ extends Component {&#10;  render() {&#10;         return (&#10;                   &lt;div&gt;&#10;                                $END$&#10;&lt;/div&gt;&#10;                )&#10; }&#10;}&#10;&#10;export default $TM_FILENAME_BASE$" description="Creates a React component class with ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rccp" value="import React, { Component } from 'react'&#10;import PropTypes from 'prop-types'&#10;&#10;class $TM_FILENAME_BASE$ extends Component {&#10;       render() {&#10;         return (&#10;                   &lt;div&gt;&#10;                           $END$&#10;                      &lt;/div&gt;&#10;               )&#10; }&#10;}&#10;&#10;$TM_FILENAME_BASE$.propTypes = {&#10;&#10;}&#10;&#10;export default $TM_FILENAME_BASE$;" description="Creates a React component class with PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rcfc" value="import React, { Component } from 'react'&#10;import PropTypes from 'prop-types'&#10;&#10;class $TM_FILENAME_BASE$ extends Component {&#10;       constructor(props) {&#10;               super(props)&#10;&#10;    }&#10;&#10;     componentWillMount() {&#10;&#10;        }&#10;&#10;     componentDidMount() {&#10;&#10; }&#10;&#10;     componentWillReceiveProps(nextProps) {&#10;&#10;   }&#10;&#10;     shouldComponentUpdate(nextProps, nextState) {&#10;&#10; }&#10;&#10;componentWillUpdate(nextProps, nextState) {&#10;&#10;   }&#10;&#10;     componentDidUpdate(prevProps, prevState) {&#10;&#10;    }&#10;&#10;        componentWillUnmount() {&#10;&#10;      }&#10;&#10;     render() {&#10;         return (&#10;                   &lt;div&gt;&#10;&#10;                      &lt;/div&gt;&#10;               )&#10; }&#10;}&#10;&#10;$TM_FILENAME_BASE$.propTypes = {&#10;&#10;};&#10;&#10;export default $TM_FILENAME_BASE$" description="Creates a React component class with PropTypes and all lifecycle methods and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rpc" value="import React, { PureComponent } from 'react'&#10;import PropTypes from 'prop-types'&#10;&#10;class $TM_FILENAME_BASE$ extends PureComponent {&#10;        render() {&#10;         return (&#10;             &lt;div&gt;&#10;                         $END$&#10;                      &lt;/div&gt;&#10;               )&#10; }&#10;}&#10;&#10;$TM_FILENAME_BASE$.propTypes = {&#10;&#10;}&#10;&#10;export default $TM_FILENAME_BASE$;" description="Creates a React pure component class with PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rrc" value="import React, { Component } from 'react'&#10;import { connect } from 'react-redux'&#10;&#10;function mapStateToProps(state) {&#10;     return {&#10;&#10;      }&#10;}&#10;&#10;class $TM_FILENAME_BASE$ extends Component {&#10;   render() {&#10;         return (&#10;                   &lt;div&gt;&#10;                                $END$&#10;                 &lt;/div&gt;&#10;               )&#10; }&#10;}&#10;&#10;export default connect(&#10;   mapStateToProps,&#10;)($TM_FILENAME_BASE$)" description="Creates a React component class connected to redux" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rsfp" value="import React from 'react'&#10;import PropTypes from 'prop-types'&#10;&#10;$TM_FILENAME_BASE$.propTypes = {&#10;  $END$&#10;}&#10;&#10;function $TM_FILENAME_BASE$(props) {&#10;     return (&#10;     &lt;div&gt;&#10;                 &#10;           &lt;/div&gt;&#10;       )&#10;}&#10;&#10;export default $TM_FILENAME_BASE$" description="Creates a stateless React component as a named function with PropTypes" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>